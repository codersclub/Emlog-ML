<?php
/**
 * Database operation class
 *
 * @copyright (c) Emlog All Rights Reserved
 */

/**
 * MYSQL data manipulation methods class
 */

class MySql {

	/**
	 * Number of queries
	 * @var int
	 */
	private $queryCount = 0;

	/**
	 * Internal data connection object
	 * @var mysqli
	 */
	private $conn;

	/**
	 * Internal data results
	 * @var mysqli_result
	 */
	private $result;

	/**
	 * Internal instance object
	 * @var object MySql
	 */
	private static $instance = null;

	/**
	 * Constructor
	 */
	private function __construct() {
		global $lang;
		if (!function_exists('mysql_connect')) {
			emMsg(lang('mysql_not_supported'));
		}

		@$this->conn = new mysqli(DB_HOST, DB_USER, DB_PASSWD, DB_NAME);

		if ($this->conn->connect_error) {
			switch ($this->conn->connect_errno) {
				case 1044:
				case 1045:
					emMsg(lang('db_user_error'));
					break;

                case 1049:
					emMsg(lang('db_not_found'));
					break;

				case 2003:
                    emMsg(lang('db_port_error'));
					break;

				case 2005:
					emMsg(lang('db_connect_error'));
					break;

				case 2006:
                    emMsg(lang('db_server_error'));
					break;

				default :
                    emMsg(lang('db_error_code') . $this->geterrno());
					break;
			}
		}

		$this->conn->set_charset('utf8');
	}

	/**
	 * Return the database connection instance
	 */
	public static function getInstance() {
		if (self::$instance == null) {
			self::$instance = new MySql();
		}

		return self::$instance;
	}

	/**
	 * Close database connection
	 */
	function close() {
		return $this->conn->close();
	}

	/**
	 * Send query
	 *
	 */
	function query($sql) {
		$this->result = $this->conn->query($sql);
		$this->queryCount++;
		if (!$this->result) {
			emMsg(lang('sql_statement_error') . ": $sql<br />" . $this->geterror());
		} else {
			return $this->result;
		}
	}

	/**
	 * Get a row from the result set as an associative array/digital index array
	 *
	 */
	function fetch_array(mysqli_result $query, $type = MYSQLI_ASSOC) {
		return $query->fetch_array($type);
	}

	function once_fetch_array($sql) {
		$this->result = $this->query($sql);
		return $this->fetch_array($this->result);
	}

	/**
	 * Get a row from the result set as a numeric index array
	 *
	 */
	function fetch_row(mysqli_result $query) {
		return $query->fetch_row();
	}

	/**
	 * Get the number of rows
	 *
	 */
	function num_rows(mysqli_result $query) {
		return $query->num_rows;
	}

	/**
	 * Get the number of fields in the result set
	 */
	function num_fields(mysqli_result $query) {
		return $query->field_count;
	}

	/**
	 * Get the ID generated by the previous INSERT operation
	 */
	function insert_id() {
		return $this->conn->insert_id;
	}

	/**
	 * Get mysql error
	 */
	function geterror() {
		return $this->conn->error;
	}

	/**
	 * Get mysql error code
	 */
	function geterrno() {
		return $this->conn->errno;
	}

	/**
	 * Get number of affected rows in previous MySQL operation
	 */
	function affected_rows() {
		return $this->conn->affected_rows;
	}

	/**
	 * Get database version information
	 */
	function getMysqlVersion() {
		return $this->conn->server_info;
	}

	/**
	 * Get the number of database queries
	 */
	function getQueryCount() {
		return $this->queryCount;
	}

    /**
	 *  Escapes special characters
	 */
	function escape_string($sql) {
		return $this->conn->real_escape_string($sql);
	}
}
